<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yelp.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.yelp.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="review_count" jdbcType="INTEGER" property="reviewCount" />
    <result column="yelping_since" jdbcType="TIMESTAMP" property="yelpingSince" />
    <result column="useful" jdbcType="INTEGER" property="useful" />
    <result column="funny" jdbcType="INTEGER" property="funny" />
    <result column="cool" jdbcType="INTEGER" property="cool" />
    <result column="fans" jdbcType="INTEGER" property="fans" />
    <result column="average_stars" jdbcType="REAL" property="averageStars" />
    <result column="compliment_hot" jdbcType="INTEGER" property="complimentHot" />
    <result column="compliment_more" jdbcType="INTEGER" property="complimentMore" />
    <result column="compliment_profile" jdbcType="INTEGER" property="complimentProfile" />
    <result column="compliment_cute" jdbcType="INTEGER" property="complimentCute" />
    <result column="compliment_list" jdbcType="INTEGER" property="complimentList" />
    <result column="compliment_note" jdbcType="INTEGER" property="complimentNote" />
    <result column="compliment_plain" jdbcType="INTEGER" property="complimentPlain" />
    <result column="compliment_cool" jdbcType="INTEGER" property="complimentCool" />
    <result column="compliment_funny" jdbcType="INTEGER" property="complimentFunny" />
    <result column="compliment_writer" jdbcType="INTEGER" property="complimentWriter" />
    <result column="compliment_photos" jdbcType="INTEGER" property="complimentPhotos" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars, 
    compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, 
    compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, 
    compliment_photos
  </sql>
  <select id="selectByExample" parameterType="com.yelp.entity.UserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yelp.entity.UserExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yelp.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (name, review_count, yelping_since, 
      useful, funny, cool, 
      fans, average_stars, compliment_hot, 
      compliment_more, compliment_profile, compliment_cute, 
      compliment_list, compliment_note, compliment_plain, 
      compliment_cool, compliment_funny, compliment_writer, 
      compliment_photos)
    values (#{name,jdbcType=VARCHAR}, #{reviewCount,jdbcType=INTEGER}, #{yelpingSince,jdbcType=TIMESTAMP}, 
      #{useful,jdbcType=INTEGER}, #{funny,jdbcType=INTEGER}, #{cool,jdbcType=INTEGER}, 
      #{fans,jdbcType=INTEGER}, #{averageStars,jdbcType=REAL}, #{complimentHot,jdbcType=INTEGER}, 
      #{complimentMore,jdbcType=INTEGER}, #{complimentProfile,jdbcType=INTEGER}, #{complimentCute,jdbcType=INTEGER}, 
      #{complimentList,jdbcType=INTEGER}, #{complimentNote,jdbcType=INTEGER}, #{complimentPlain,jdbcType=INTEGER}, 
      #{complimentCool,jdbcType=INTEGER}, #{complimentFunny,jdbcType=INTEGER}, #{complimentWriter,jdbcType=INTEGER}, 
      #{complimentPhotos,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yelp.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="reviewCount != null">
        review_count,
      </if>
      <if test="yelpingSince != null">
        yelping_since,
      </if>
      <if test="useful != null">
        useful,
      </if>
      <if test="funny != null">
        funny,
      </if>
      <if test="cool != null">
        cool,
      </if>
      <if test="fans != null">
        fans,
      </if>
      <if test="averageStars != null">
        average_stars,
      </if>
      <if test="complimentHot != null">
        compliment_hot,
      </if>
      <if test="complimentMore != null">
        compliment_more,
      </if>
      <if test="complimentProfile != null">
        compliment_profile,
      </if>
      <if test="complimentCute != null">
        compliment_cute,
      </if>
      <if test="complimentList != null">
        compliment_list,
      </if>
      <if test="complimentNote != null">
        compliment_note,
      </if>
      <if test="complimentPlain != null">
        compliment_plain,
      </if>
      <if test="complimentCool != null">
        compliment_cool,
      </if>
      <if test="complimentFunny != null">
        compliment_funny,
      </if>
      <if test="complimentWriter != null">
        compliment_writer,
      </if>
      <if test="complimentPhotos != null">
        compliment_photos,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="reviewCount != null">
        #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="yelpingSince != null">
        #{yelpingSince,jdbcType=TIMESTAMP},
      </if>
      <if test="useful != null">
        #{useful,jdbcType=INTEGER},
      </if>
      <if test="funny != null">
        #{funny,jdbcType=INTEGER},
      </if>
      <if test="cool != null">
        #{cool,jdbcType=INTEGER},
      </if>
      <if test="fans != null">
        #{fans,jdbcType=INTEGER},
      </if>
      <if test="averageStars != null">
        #{averageStars,jdbcType=REAL},
      </if>
      <if test="complimentHot != null">
        #{complimentHot,jdbcType=INTEGER},
      </if>
      <if test="complimentMore != null">
        #{complimentMore,jdbcType=INTEGER},
      </if>
      <if test="complimentProfile != null">
        #{complimentProfile,jdbcType=INTEGER},
      </if>
      <if test="complimentCute != null">
        #{complimentCute,jdbcType=INTEGER},
      </if>
      <if test="complimentList != null">
        #{complimentList,jdbcType=INTEGER},
      </if>
      <if test="complimentNote != null">
        #{complimentNote,jdbcType=INTEGER},
      </if>
      <if test="complimentPlain != null">
        #{complimentPlain,jdbcType=INTEGER},
      </if>
      <if test="complimentCool != null">
        #{complimentCool,jdbcType=INTEGER},
      </if>
      <if test="complimentFunny != null">
        #{complimentFunny,jdbcType=INTEGER},
      </if>
      <if test="complimentWriter != null">
        #{complimentWriter,jdbcType=INTEGER},
      </if>
      <if test="complimentPhotos != null">
        #{complimentPhotos,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yelp.entity.UserExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewCount != null">
        review_count = #{record.reviewCount,jdbcType=INTEGER},
      </if>
      <if test="record.yelpingSince != null">
        yelping_since = #{record.yelpingSince,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useful != null">
        useful = #{record.useful,jdbcType=INTEGER},
      </if>
      <if test="record.funny != null">
        funny = #{record.funny,jdbcType=INTEGER},
      </if>
      <if test="record.cool != null">
        cool = #{record.cool,jdbcType=INTEGER},
      </if>
      <if test="record.fans != null">
        fans = #{record.fans,jdbcType=INTEGER},
      </if>
      <if test="record.averageStars != null">
        average_stars = #{record.averageStars,jdbcType=REAL},
      </if>
      <if test="record.complimentHot != null">
        compliment_hot = #{record.complimentHot,jdbcType=INTEGER},
      </if>
      <if test="record.complimentMore != null">
        compliment_more = #{record.complimentMore,jdbcType=INTEGER},
      </if>
      <if test="record.complimentProfile != null">
        compliment_profile = #{record.complimentProfile,jdbcType=INTEGER},
      </if>
      <if test="record.complimentCute != null">
        compliment_cute = #{record.complimentCute,jdbcType=INTEGER},
      </if>
      <if test="record.complimentList != null">
        compliment_list = #{record.complimentList,jdbcType=INTEGER},
      </if>
      <if test="record.complimentNote != null">
        compliment_note = #{record.complimentNote,jdbcType=INTEGER},
      </if>
      <if test="record.complimentPlain != null">
        compliment_plain = #{record.complimentPlain,jdbcType=INTEGER},
      </if>
      <if test="record.complimentCool != null">
        compliment_cool = #{record.complimentCool,jdbcType=INTEGER},
      </if>
      <if test="record.complimentFunny != null">
        compliment_funny = #{record.complimentFunny,jdbcType=INTEGER},
      </if>
      <if test="record.complimentWriter != null">
        compliment_writer = #{record.complimentWriter,jdbcType=INTEGER},
      </if>
      <if test="record.complimentPhotos != null">
        compliment_photos = #{record.complimentPhotos,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      review_count = #{record.reviewCount,jdbcType=INTEGER},
      yelping_since = #{record.yelpingSince,jdbcType=TIMESTAMP},
      useful = #{record.useful,jdbcType=INTEGER},
      funny = #{record.funny,jdbcType=INTEGER},
      cool = #{record.cool,jdbcType=INTEGER},
      fans = #{record.fans,jdbcType=INTEGER},
      average_stars = #{record.averageStars,jdbcType=REAL},
      compliment_hot = #{record.complimentHot,jdbcType=INTEGER},
      compliment_more = #{record.complimentMore,jdbcType=INTEGER},
      compliment_profile = #{record.complimentProfile,jdbcType=INTEGER},
      compliment_cute = #{record.complimentCute,jdbcType=INTEGER},
      compliment_list = #{record.complimentList,jdbcType=INTEGER},
      compliment_note = #{record.complimentNote,jdbcType=INTEGER},
      compliment_plain = #{record.complimentPlain,jdbcType=INTEGER},
      compliment_cool = #{record.complimentCool,jdbcType=INTEGER},
      compliment_funny = #{record.complimentFunny,jdbcType=INTEGER},
      compliment_writer = #{record.complimentWriter,jdbcType=INTEGER},
      compliment_photos = #{record.complimentPhotos,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yelp.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="reviewCount != null">
        review_count = #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="yelpingSince != null">
        yelping_since = #{yelpingSince,jdbcType=TIMESTAMP},
      </if>
      <if test="useful != null">
        useful = #{useful,jdbcType=INTEGER},
      </if>
      <if test="funny != null">
        funny = #{funny,jdbcType=INTEGER},
      </if>
      <if test="cool != null">
        cool = #{cool,jdbcType=INTEGER},
      </if>
      <if test="fans != null">
        fans = #{fans,jdbcType=INTEGER},
      </if>
      <if test="averageStars != null">
        average_stars = #{averageStars,jdbcType=REAL},
      </if>
      <if test="complimentHot != null">
        compliment_hot = #{complimentHot,jdbcType=INTEGER},
      </if>
      <if test="complimentMore != null">
        compliment_more = #{complimentMore,jdbcType=INTEGER},
      </if>
      <if test="complimentProfile != null">
        compliment_profile = #{complimentProfile,jdbcType=INTEGER},
      </if>
      <if test="complimentCute != null">
        compliment_cute = #{complimentCute,jdbcType=INTEGER},
      </if>
      <if test="complimentList != null">
        compliment_list = #{complimentList,jdbcType=INTEGER},
      </if>
      <if test="complimentNote != null">
        compliment_note = #{complimentNote,jdbcType=INTEGER},
      </if>
      <if test="complimentPlain != null">
        compliment_plain = #{complimentPlain,jdbcType=INTEGER},
      </if>
      <if test="complimentCool != null">
        compliment_cool = #{complimentCool,jdbcType=INTEGER},
      </if>
      <if test="complimentFunny != null">
        compliment_funny = #{complimentFunny,jdbcType=INTEGER},
      </if>
      <if test="complimentWriter != null">
        compliment_writer = #{complimentWriter,jdbcType=INTEGER},
      </if>
      <if test="complimentPhotos != null">
        compliment_photos = #{complimentPhotos,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yelp.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set name = #{name,jdbcType=VARCHAR},
      review_count = #{reviewCount,jdbcType=INTEGER},
      yelping_since = #{yelpingSince,jdbcType=TIMESTAMP},
      useful = #{useful,jdbcType=INTEGER},
      funny = #{funny,jdbcType=INTEGER},
      cool = #{cool,jdbcType=INTEGER},
      fans = #{fans,jdbcType=INTEGER},
      average_stars = #{averageStars,jdbcType=REAL},
      compliment_hot = #{complimentHot,jdbcType=INTEGER},
      compliment_more = #{complimentMore,jdbcType=INTEGER},
      compliment_profile = #{complimentProfile,jdbcType=INTEGER},
      compliment_cute = #{complimentCute,jdbcType=INTEGER},
      compliment_list = #{complimentList,jdbcType=INTEGER},
      compliment_note = #{complimentNote,jdbcType=INTEGER},
      compliment_plain = #{complimentPlain,jdbcType=INTEGER},
      compliment_cool = #{complimentCool,jdbcType=INTEGER},
      compliment_funny = #{complimentFunny,jdbcType=INTEGER},
      compliment_writer = #{complimentWriter,jdbcType=INTEGER},
      compliment_photos = #{complimentPhotos,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>